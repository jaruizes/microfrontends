version: "3.8"
services:
  authserver:
    container_name: "microfrontends-keycloak"
    image: "quay.io/keycloak/keycloak:11.0.2"
    ports:
      - "8100:8080"
    environment:
      - KEYCLOAK_USER=admin
      - KEYCLOAK_PASSWORD=admin
      - KEYCLOAK_IMPORT=/tmp/microfrontends-realm.json
    volumes:
      - type: bind
        source: ./keycloak/realm
        target: /tmp
      - type: bind
        source: ./keycloak/themes/microfrontends
        target: /opt/jboss/keycloak/themes/microfrontends
      - type: bind
        source: ./keycloak/standalone/standalone.xml
        target: /opt/jboss/keycloak/standalone/configuration/standalone.xml
    restart: always

  microfrontends-server:
    container_name: "microfrontends-server"
    image: "nginx"
    ports:
      - "8080:8080"
    volumes:
      - type: bind
        source: ./microfrontends-server/nginx-conf
        target: /etc/nginx/conf.d
      - type: bind
        source: ./microfrontends-server/content
        target: /usr/share/nginx/html
    restart: always

  customers-server:
    container_name: "customers-server"
    image: "nginx"
    ports:
      - "9080:9080"
    volumes:
      - type: bind
        source: ./customers-server/nginx-conf
        target: /etc/nginx/conf.d
      - type: bind
        source: ./customers-server/content
        target: /usr/share/nginx/html
    restart: always

  backoffice-server:
    container_name: "backoffice-server"
    image: "nginx"
    ports:
      - "9090:9090"
    volumes:
      - type: bind
        source: ./backoffice-server/nginx-conf
        target: /etc/nginx/conf.d
      - type: bind
        source: ./backoffice-server/content
        target: /usr/share/nginx/html
    restart: always

  broker-server:
    container_name: "broker-server"
    image: "nginx"
    ports:
      - "9099:9099"
    volumes:
      - type: bind
        source: ./broker-server/nginx-conf
        target: /etc/nginx/conf.d
      - type: bind
        source: ./broker-server/content
        target: /usr/share/nginx/html
    restart: always

  portal-server:
    container_name: "portal-server"
    image: "nginx"
    ports:
      - "9000:9000"
    volumes:
      - type: bind
        source: ./portal-server/nginx-conf
        target: /etc/nginx/conf.d
      - type: bind
        source: ./portal-server/content
        target: /usr/share/nginx/html
    restart: always

  mocks-server:
    container_name: "mocks-server"
    build: ./mocks-server
    ports:
      - "9100:3000"
    volumes:
      - ./mocks-server/mocks:/data
    restart: always

#  api-server:
#    container_name: "api-server"
#    image: "nginx"
#    ports:
#      - "7500:7500"
#    volumes:
#      - type: bind
#        source: ./apis/nginx-conf
#        target: /etc/nginx/conf.d
#    restart: always
#
#  customers-service:
#    image: customers-service
#    container_name: customers-service
#    restart: always
#    environment:
#      SPRING.DATASOURCE.URL: jdbc:postgresql://db:5432/techbank?currentSchema=customers
#      SPRING.DATASOURCE.USERNAME: techbank
#      SPRING.DATASOURCE.PASSWORD: techbank21
#    ports:
#    - 8002:8002
#
#  accounts-service:
#    image: accounts-service
#    container_name: accounts-service
#    restart: always
#    environment:
#      SPRING.DATASOURCE.URL: jdbc:postgresql://db:5432/techbank?currentSchema=accounts
#      SPRING.DATASOURCE.USERNAME: techbank
#      SPRING.DATASOURCE.PASSWORD: techbank21
#    ports:
#      - 8000:8000
#
#  cards-service:
#    image: cards-service
#    container_name: cards-service
#    restart: always
#    environment:
#      SPRING.DATASOURCE.URL: jdbc:postgresql://db:5432/techbank?currentSchema=cards
#      SPRING.DATASOURCE.USERNAME: techbank
#      SPRING.DATASOURCE.PASSWORD: techbank21
#    ports:
#      - 8001:8001
#  db:
#    image: postgres
#    container_name: general-db
#    restart: always
#    environment:
#      POSTGRES_USER: techbank
#      POSTGRES_PASSWORD: techbank21
#    ports:
#      - "5000:5432"
#    volumes:
#      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql
